
networks:
  bi_net:
    driver: bridge
    ipam:
      config:
        - subnet: 172.30.0.0/24
          gateway: 172.30.0.1

services:
  superset-db:
    image: postgres:15
    environment:
      POSTGRES_DB: superset
      POSTGRES_USER: superset
      POSTGRES_PASSWORD: ${SUPERSET_DB_PASSWORD}
    volumes:
      - ./data/postgres:/var/lib/postgresql/data   # bind mount, not a named volume
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U superset -d superset"]
      interval: 5s
      timeout: 3s
      retries: 20
    networks:
      bi_net:
        ipv4_address: 172.30.0.13

  superset-redis:
    image: redis:7
    command: redis-server --save "" --appendonly no
    networks:
      bi_net:
        ipv4_address: 172.30.0.12

  # MongoDB BI Connector -> connects to your REMOTE MongoDB (not in this compose)
  mongobi:
    image: ubuntu:22.04
    depends_on:
      - superset-redis
    environment:
      MONGO_HOST: ${MONGO_HOST}                # e.g., 192.168.1.50 or fqdn
      MONGO_PORT: ${MONGO_PORT:-27017}
      MONGO_USER: ${MONGO_USER}
      MONGO_PASS: ${MONGO_PASS}
      MONGO_AUTHSOURCE: ${MONGO_AUTHSOURCE:-admin}
      MONGO_SAMPLE_NS: ${MONGO_SAMPLE_NS:-sales.*}
      MONGO_EXTRA: ${MONGO_EXTRA}
    command: >
      /mongobi/mongosqld
      --addr 0.0.0.0:3307
      --mongo-uri "mongodb://${MONGO_HOST}:${MONGO_PORT}/?authSource=${MONGO_AUTHSOURCE}${MONGO_EXTRA}"
      --sampleNamespaces "${MONGO_SAMPLE_NS}"
    volumes:
      - ./mongobi:/mongobi:ro
    expose:
      - "3307"           # internal to bi_net; Superset reaches it by service name
    networks:
      bi_net:
        ipv4_address: 172.30.0.11

  # Superset web (published on host port 8088)
  superset:
    image: superset-with-extras:local
    build:
      context: .
      dockerfile: Dockerfile.superset
      args:
        EXTRA_PY_REQUIREMENTS: docker/requirements-local.txt
    depends_on:
      superset-db:
        condition: service_healthy
      superset-redis:
        condition: service_started
      mongobi:
        condition: service_started
    ports:
      - "8088:8088"      # <- web UI accessible on the host
    environment:
      SUPERSET_SECRET_KEY: ${SUPERSET_SECRET_KEY}
      SUPERSET_CONFIG_PATH: /app/pythonpath/superset_config.py
      SUPERSET_DB_PASSWORD: ${SUPERSET_DB_PASSWORD}
    volumes:
      - ./superset_config:/app/pythonpath:ro
      - ./data/superset_home:/app/superset_home
    networks:
      bi_net:
        ipv4_address: 172.30.0.10


  # One-off initializer (runs migrations +  bash admin routine)
  superset-init:
    profiles: ["init"]
    image: superset-with-extras:local
    depends_on:
      superset-db:
        condition: service_healthy
      superset:
        condition: service_started
    environment:
      SUPERSET_SECRET_KEY: ${SUPERSET_SECRET_KEY}
      SUPERSET_CONFIG_PATH: /app/pythonpath/superset_config.py
      SUPERSET_DB_PASSWORD: ${SUPERSET_DB_PASSWORD}
      ADMIN_USERNAME: ${ADMIN_USERNAME:-admin}
      ADMIN_PASSWORD: ${ADMIN_PASSWORD:-admin}
      ADMIN_EMAIL:    ${ADMIN_EMAIL:-admin@example.com}
      ADMIN_FIRSTNAME: ${ADMIN_FIRSTNAME:-Admin}
      ADMIN_LASTNAME: ${ADMIN_LASTNAME:-User}
    volumes:
      - ./superset_config:/app/pythonpath:ro
      - ./scripts:/docker-init:ro
    command: ["bash", "/docker-init/superset-init.sh"]
    restart: "no"
    networks:
      bi_net:
        ipv4_address: 172.30.0.14

